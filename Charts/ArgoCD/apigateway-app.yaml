apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: apigateway
  namespace: argocd
  annotations:
    # ① 告訴 Updater 要追哪個 image（取個別名 apigw）
    #   （你可用 latest、semver、或單純任何新 tag）
    argocd-image-updater.argoproj.io/image-list: |
      apigw=085980781371.dkr.ecr.ap-east-2.amazonaws.com/apigateway
    # ② 把該別名映射到 Helm values 的鍵
    argocd-image-updater.argoproj.io/apigw.helm.image-name: image.repository
    argocd-image-updater.argoproj.io/apigw.helm.image-tag: image.tag
    # ③ 回寫方式（若不想用預設）
    #    - git：回寫到 repo（純 GitOps）
    #    - argocd：覆寫參數（快上線）
    argocd-image-updater.argoproj.io/write-back-method: git

    # ④ 更新策略（擇一）
    #    - latest：只要有更新就跟（tag 不必是 semver）
    #    - semver：依符合的版本範圍
    #    - digest：鎖 digest
    argocd-image-updater.argoproj.io/apigw.update-strategy: newest-build
    argocd-image-updater.argoproj.io/apigw.pull-secret: ext:/scripts/ecr-login.sh


    # ⑤（選）掃描頻率、允許的 tag 篩選
    argocd-image-updater.argoproj.io/apigw.allow-tags: 'regexp:^sha-[0-9a-f]{40}$'
spec:
  project: default
  source:
    repoURL: https://github.com/Gino1024/microServiceDemo-infra.git
    targetRevision: main
    path: Charts/WebApp/apigateway
    helm:
      releaseName: apigateway
      values: |
        # override namespace-specific env if needed
  destination:
    server: https://kubernetes.default.svc
    namespace: webapp
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      